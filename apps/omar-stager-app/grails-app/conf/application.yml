---
grails:
    profile: web
    codegen:
        defaultPackage: omar.stager.app
    gorm:
        reactor:
            # Whether to translate GORM events into Reactor events
            # Disabled by default for performance reasons
            events: false
info:
    app:
        name: '@info.app.name@'
        version: '@info.app.version@'
        grailsVersion: '@info.app.grailsVersion@'
spring:
    jmx:
        unique-names: true
    main:
        banner-mode: "off"
    groovy:
        template:
            check-template-location: false
    devtools:
        restart:
            additional-exclude:
                - '*.gsp'
                - '**/*.gsp'
                - '*.gson'
                - '**/*.gson'
                - 'logback.xml'
                - '*.properties'
management:
    endpoints:
        enabled-by-default: false

---
grails:
    mime:
        disable:
            accept:
                header:
                    userAgents:
                        - Gecko
                        - WebKit
                        - Presto
                        - Trident
        types:
            all: '*/*'
            atom: application/atom+xml
            css: text/css
            csv: text/csv
            form: application/x-www-form-urlencoded
            html:
              - text/html
              - application/xhtml+xml
            js: text/javascript
            json:
              - application/json
              - text/json
            multipartForm: multipart/form-data
            pdf: application/pdf
            rss: application/rss+xml
            text: text/plain
            hal:
              - application/hal+json
              - application/hal+xml
            xml:
              - text/xml
              - application/xml
    urlmapping:
        cache:
            maxsize: 1000
    controllers:
        defaultScope: singleton
    converters:
        encoding: UTF-8
    views:
        default:
            codec: html
        gsp:
            encoding: UTF-8
            htmlcodec: xml
            codecs:
                expression: html
                scriptlet: html
                taglib: none
                staticparts: none
management:
    endpoints:
        jmx:
            unique-names: true

---
hibernate:
    cache:
        queries: false
        use_second_level_cache: false
        use_query_cache: false
    dialect: 'org.hibernate.spatial.dialect.postgis.PostgisDialect'
            
dataSource:
    pooled: true
    jmxExport: true
    driverClassName: org.postgresql.Driver
    username: postgres
    password: ${omarDb.password}
    dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect

environments:
    development:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql:omardb-dev
    test:
        dataSource:
            dbCreate: update
            url: jdbc:postgresql:omardb-test
    production:
        dataSource:
            dbCreate: update
            url: ${omarDb.url}
            properties:
                jmxEnabled: true
                initialSize: 5
                maxActive: 50
                minIdle: 5
                maxIdle: 25
                maxWait: 10000
                maxAge: 600000
                timeBetweenEvictionRunsMillis: 5000
                minEvictableIdleTimeMillis: 60000
                validationQuery: SELECT 1
                validationQueryTimeout: 3
                validationInterval: 15000
                testOnBorrow: true
                testWhileIdle: true
                testOnReturn: false
                jdbcInterceptors: ConnectionState
                defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
---
server:
    servlet:
        context-path: /omar-stager
    contextPath: ${server.servlet.context-path}

swagger:
    schemes:
        - HTTPS
        - HTTP

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    env:
      enabled: true
      sensitive: false
    health:
      enabled: true
    
grails:
    cors:
        enabled: true
    resources:
        pattern: '/**'
    servlet:
        version: 3.0
---
spring:
  application:
    name: omar-stager
  cloud:
    discovery:
      enabled: ${SPRING_CLOUD_DISCOVERY_ENABLED:false}
    service-registry:
      auto-registration:
        enabled: ${spring.cloud.discovery.enabled}

---
# environments:
#   production:
#     dataSource:
#       pooled: true
#       jmxExport: true
#       driverClassName: org.postgresql.Driver
#       dialect: org.hibernate.spatial.dialect.postgis.PostgisDialect
#       url: jdbc:postgres://localhost:5432/omar_db
#       username: postgres
#       password: password

logging:
  config: classpath:logback.xml

quartz:
  # This service supports background jobs using the quartz framework.
  # Just fix this to not use the jdbcStore.
  # For now the requests are not persistent.
  jdbcStore: false
  threadPool:
    # Quartz allows one to adjust the number of concurrent threads running.
    # Here we default to 4 threads.
    # This will allow 4 concurrent stagers to run for this service.
    threadCount: 2

# Set the context path for tha pplication.
server:
  contextPath: /omar-stager

# Define the http protocols that swagger can use
swagger:
  schemes:
    - HTTPS
    - HTTP

videoStreaming:
  videoServerDirRoot: /data/videos
  videoServerUrlRoot: ${serverProtocol}://${serverName}/videos

---
stager:
  errorFile:
    enabled: false
    directory: /tmp/omar-stager/errors/

